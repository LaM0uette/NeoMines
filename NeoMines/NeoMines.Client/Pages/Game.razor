@page "/Game/{GameModeIndex:int}"
@using NeoMines.Model.Game
@inherits GameBase
@rendermode InteractiveWebAssembly

<title>Game - @GameMode</title>

<div class="game-body">

    <div class="info-game">
        <div class="info-game__bomb-icon"></div>
        <p class="info-game__bomb-count">NA</p>
        <p>IsGameOver: @IsGameOver </p>
        <p>IsWin: @IsWin </p>
    </div>

    <div class="mine-grid">
        
        @for (var row = 0; row < Rows; row++)
        {
            for (var col = 0; col < Columns; col++)
            {
                var currentRow = row;
                var currentColumn = col;
                
                var cell = Grid[row, col];
                
                var undiscoveredClass = !cell.IsDiscovered ? "cell-undiscovered" : "cell-discovered";
                
                <button class="mine-cell @undiscoveredClass"
                        @onclick="() => OnLeftClick(currentRow, currentColumn)"
                        @oncontextmenu="() => OnRightClick(currentRow, currentColumn)"
                        @oncontextmenu:preventDefault="true"
                        disabled="@(IsGameOver || IsWin)">

                    @if (cell.HasFlag)
                    {
                        <span class="cell-flag">🚩</span>
                    }
                    else if (cell.IsDiscovered)
                    {
                        if (cell is BombCell)
                        {
                            <span class="cell-bomb">💣</span>
                        }
                        else if (cell is NumberCell numberCell)
                        {
                            <span class="cell-number-@numberCell.Number">@numberCell.Number</span>
                        }
                    }
                    
                </button>
            }
        }
        
    </div>
    
</div>